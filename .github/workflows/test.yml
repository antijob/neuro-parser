name: Test

on:
  pull_request:
    branches:
      - main
      - stage
  workflow_dispatch:

jobs:
  test:
    name: Run tests
    runs-on: ["self-hosted", "neuroparser", "production"]
    environment: Unknown
    if: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Prepare .env.test
        run: |
          cp .env.template .env.test
          sed -i \
            -e s,^TELEGRAM_BOT_TOKEN=.*,TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN, \
            -e s,^API_RPS=.*,API_RPS=$API_RPS, \
            .env.test
        env:
          TELEGRAM_BOT_TOKEN: "${{ secrets.TELEGRAM_BOT_TOKEN }}"
          API_RPS: "100/minute"

      - name: Build Docker image
        run: |
          ls -a
          docker build -t server-test -f docker/web/Dockerfile .

      # - name: Copy .env.test to Docker container
      #   run: |
      #     ls
      #     docker cp .env.test server-test:/code/.env

      - name: Run Docker container and execute tests
        run: |
          docker run --rm \
            -v $(pwd):/code \
            --env-file .env.test \
            server-test /bin/bash -c "ls -a; pip install pytest-django; python -m pytest"

        env:
          POSTGRES_USER: "${{ secrets.POSTGRES_USER }}"
          POSTGRES_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
          DJANGO_KEY: "${{ secrets.DJANGO_KEY}}"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./test-results
