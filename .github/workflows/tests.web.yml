# Made in a reusable way
# Ref: https://docs.github.com/en/actions/sharing-automations/reusing-workflows
name: Web tests

on:
  pull_request:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run tests
    runs-on: ["self-hosted", "neuroparser", "staging"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      
      - name: Build python
        id: build
        run: |
          branch=$(echo "${GITHUB_REF#refs/heads/}" | tr '/' '-')
          echo "Branch name with / substituted for - : $branch"
          # use dummy .env.template so build is happy
          cp .env.template .env
          NEURO_PARSER_VERSION=${branch} \
            docker compose -f docker-compose.yaml build web

      - name: Prepare .env.test
        run: |
          cp .env.template .env.test
          sed -i \
            -e s,^TELEGRAM_BOT_TOKEN=.*,TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN, \
            -e s,^API_RPS=.*,API_RPS=$API_RPS, \
            .env.test
        env:
          TELEGRAM_BOT_TOKEN: "non-existing-token"
          API_RPS: "100/minute"

      - name: Execute tests in Docker
        env:
          TEST_REPORT_ROOT: artifacts/tests
          TEST_REPORT_OUTPUT: md_report.md
        run: |
          echo "TEST_REPORT_ROOT=${TEST_REPORT_ROOT}" >> "$GITHUB_ENV";
          echo "TEST_REPORT_FILE=${TEST_REPORT_ROOT}/${TEST_REPORT_OUTPUT}" >> "$GITHUB_ENV";
          mkdir -p ${TEST_REPORT_ROOT};
          docker compose --env-file .env.test \
            run \
            -u $UID \
            -v $(pwd)/${TEST_REPORT_ROOT}:/${TEST_REPORT_ROOT} \
            web pytest . -v \
              --cov \
              --cov-report=lcov:/${TEST_REPORT_ROOT}/.coverage \
              --md-report \
              --md-report-flavor gfm \
              --md-report-output /${TEST_REPORT_ROOT}/${TEST_REPORT_OUTPUT}
          
          # Because python-coverage-comment-action cannot handle any other paths. Amazing.
          cp ${TEST_REPORT_ROOT}/.coverage .coverage

      # Reporting coverage
      # https://github.com/romeovs/lcov-reporter-action
      - name: Coverage comment
        uses: romeovs/lcov-reporter-action@v0.3.1
        if: always() && github.event_name == 'pull_request'
        with:
          title: "coverage-report"
          delete-old-comments: true
          lcov-file: ${{ env.TEST_REPORT_ROOT }}/.coverage

      # Reporting to PR details and Job summary
      # https://github.com/thombashi/pytest-md-report
      - name: Render the report to the PR
        uses: marocchino/sticky-pull-request-comment@v2
        if: always()
        with:
          header: test-report
          recreate: true
          path: ${{ env.TEST_REPORT_FILE }}

      - name: Output reports to the job summary
        if: always()
        shell: bash
        run: |
          if [ -f "$TEST_REPORT_FILE" ]; then
            echo "<details><summary>Test Report</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat "$TEST_REPORT_FILE" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          fi
