services:
  traefik:
    image: traefik:2.10
    container_name: "traefik"
    command:
      - "--accessLog=true"
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - 80:80
      - 81:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - djangonetwork

  db:
    image: postgres:13.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    env_file:
      - .env
    networks:
      - djangonetwork

  web:
    command: /bin/bash -c ./docker/web/entrypoint-dev.sh
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    volumes:
      - .:/code
    expose:
      - 8000
    env_file:
      - .env
    environment:
      DEBUG: ${DEBUG:-True}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REPLICATE_API_TOKEN: ${REPLICATE_API_TOKEN}
      API_RPS: ${API_RPS}
    depends_on:
      - db
      - redis
    networks:
      - djangonetwork
    labels:
      traefik.enable: "true"
      traefik.http.routers.django.rule: "Host(`${HOST}`)"

  celery:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    command: /bin/bash -c "./docker/celery/entrypoint.sh"
    volumes:
      - .:/code
    environment:
      REPLICATE_API_TOKEN: ${REPLICATE_API_TOKEN}
    restart: always
    depends_on:
      - redis
    networks:
      - djangonetwork

  bot:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    command: /bin/bash -c "./docker/bot/entrypoint.sh"
    volumes:
      - .:/code
    restart: always
    depends_on:
      - redis
      - web
    networks:
      - djangonetwork

  flower:
    image: mher/flower
    container_name: flower
    command: celery flower
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      FLOWER_BASIC_AUTH: ${FLOWER_USER}:${FLOWER_PASSWORD}
    ports:
      - 5555:5555
    networks:
      - djangonetwork
    restart: always
    labels:
      traefik.enable: "true"
      traefik.http.routers.flower.rule: "Host(`${FLOWER_HOST}`)"
    depends_on:
      - redis
      - web
      - celery

  redis:
    image: redis:alpine
    expose:
      - "6379"
    networks:
      - djangonetwork

  pgadmin:
    container_name: pgadmin_np
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - djangonetwork
    restart: unless-stopped

networks:
  djangonetwork:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
